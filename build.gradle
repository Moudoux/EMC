buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'http://repo.spongepowered.org/maven'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.5-SNAPSHOT'
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.0"
    }
}

version '13.1.6'
def minecraftVersion = "1.12.2";
def forgeVersion = "-14.23.2.2611";
def forgeBuild = true

apply plugin: 'maven'
apply plugin: 'java'
if (forgeBuild) {
	apply plugin: 'net.minecraftforge.gradle.forge'
} else {
	apply plugin: 'net.minecraftforge.gradle.tweaker-client'
}
apply plugin: 'org.spongepowered.mixin'
apply plugin: "com.github.johnrengelman.shadow"

group 'me.deftware'

sourceCompatibility = targetCompatibility = 1.8
compileJava {
    sourceCompatibility = targetCompatibility = 1.8
}

minecraft {
    version = forgeBuild ? minecraftVersion + forgeVersion : minecraftVersion
    runDir = 'run'
    mappings = 'snapshot_20170906'
    useDepAts = true
    makeObfSourceJar = true
    if (!forgeBuild) {
        tweakClass = 'me.deftware.launch.Launcher'
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'http://repo.spongepowered.org/maven/'
    }
}

configurations {
    deps
    compile {
        extendsFrom deps
    }
}

dependencies {
    compile('org.spongepowered:mixin:0.7.5-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
}

mixin {
    defaultObfuscationEnv forgeBuild ? searge : notch
    add sourceSets.main, "mixins.client.refmap.json"
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
    }
    manifest {
        attributes 'Implementation-Title':   'EMC'
        attributes 'Implementation-Version': version
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'full'
}

task createPom {
    doLast {
        pom {
            project {
                groupId "me.deftware"
                artifactId "EMC"
                version "${version}-${minecraftVersion}"
            }
        }.writeTo("maven/me/deftware/EMC/${version}-${minecraftVersion}/EMC-${version}-${minecraftVersion}.pom")
    }
}

task copyBuilds(type: Copy) {
    from "$rootDir/build/libs"
    into "$rootDir/maven/me/deftware/" + (forgeBuild ? "EMC-Forge" : "EMC") + "/${version}-${minecraftVersion}/"
    if (forgeBuild) {
        rename { String fileName ->
		    fileName.replace("EMC", "EMC-Forge")
		}
    }
}

reobf {
    shadowJar {
        mappingType = forgeBuild ? 'SEARGE' : 'NOTCH'
        classpath = sourceSets.main.compileClasspath
    }
}

if (forgeBuild) {
	println "Building for Forge..."
	jar {
	    manifest.attributes(
	            "MixinConfigs": 'mixins.client.json',
	            "tweakClass": 'org.spongepowered.asm.launch.MixinTweaker',
	            "TweakOrder": 0,
	            "FMLCorePluginContainsFMLMod": 'me.deftware.forge.MixinLoader',
	            "Manifest-Version": 1.0
	    )
	}
} else {
	println "Building for Minecraft..."
}

delete "$rootDir/build/libs"
delete "$rootDir/maven/me/deftware/" + (forgeBuild ? "EMC-Forge" : "EMC") + "/${version}-${minecraftVersion}"
build.dependsOn(shadowJar)
compileTestJava.dependsOn(shadowJar)
if (!forgeBuild) {
	build.dependsOn(createPom)
}
build.dependsOn(copyBuilds)

tasks.build.doLast(){
	if (forgeBuild) {
		copy {
			from "$rootDir/build/libs/EMC-${version}-full.jar"
			into "$rootDir/run/mods/"
			rename("EMC-${version}-full.jar", "EMC.jar")
		}
	}
}
